name: CI Pipeline

on:
  pull_request:
    branches: [develop, main]
  push:
    branches: [develop]
  workflow_call:
    secrets:
      DOCKER_USERNAME:
        required: true
      DOCKER_PASSWORD:
        required: true
      SONAR_TOKEN:
        required: true

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:    
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - run: git checkout HEAD^
      
      - name: Commit validation
          run: |
            # Checkout branch
            git checkout -q ${{ github.event.pull_request.head.ref }}
            
            # Set variables
            BASE_BRANCH=${{ github.event.pull_request.base.ref }}
            msg_regex='(AAA|BBB|CCC)\-[0-9]+'
            
            # Initialize invalidCommit as false, will be set to true by any invalid commits
            invalidCommit=false
            # Find current branch name
            CURRENT_BRANCH=$(git branch | grep ^\* | cut -d "*" -f 2 | cut -d " " -f 2)
            #echo "Current branch is:" $CURRENT_BRANCH
            # Find hash of commit most common ancestor, e.g. where branch began
            BRANCH_MERGE_BASE=$(git merge-base ${BASE_BRANCH} ${CURRENT_BRANCH})
            #echo "Branch merge base hash is:" $BRANCH_MERGE_BASE
            # Find all commits since common ancestor
            BRANCH_COMMITS=$(git rev-list ${BRANCH_MERGE_BASE}..HEAD)
            #echo $BRANCH_COMMITS
            # Check every commit message since ancestor for regex match
            for commit in $BRANCH_COMMITS; do
                if git log --max-count=1 --format=%B $commit | tr '[a-z]' '[A-Z]' | grep -iqE "$msg_regex"; then
                    : #If commit matches regex, commit is valid, do nothing
                else
                    # If commit doesn't match regex, commit isn't valid, print commit info
                    echo "************"
                    printf "Invalid commit message: \"%s\" and hash: %s\n" "$(git log --max-count=1 --format=%B $commit)" "$commit"
                    echo "************"
                    
                    # Set this variable to trigger rejection if any commit fails regex
                    invalidCommit=true
                fi
            done
            # If any commit are invalid, print reject message
            if [ "$invalidCommit" == true ]; then
                echo "Your push was rejected because at least one commit message on this branch is invalid"
                echo "Please fix the commit message(s) and push again."
                echo "https://help.github.com/en/articles/changing-a-commit-message"
                echo "************"
                exit 1
            elif [ "$invalidCommit" == false ]; then
                echo "************"
                echo "All commits are valid"
                echo "************"
                exit 0
            fi

      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: '11'

      - name: Cache Maven Packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Run Unit Tests
        run: mvn -B test

      # TODO: run integration tests with docker-compose

      - name: Cache SonarCloud Packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Analyze With SonarCloud
        run: mvn -B verify sonar:sonar -Dsonar.projectKey=DISLINKT-ORGANIZATION_test-repo1 -Dsonar.organization=dislinkt-organization -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONAR_TOKEN
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}